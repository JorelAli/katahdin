import "fortran.kat";
import "python.kat";
import "swift.kat";
import "fl.kat";

fortran
{
      SUBROUTINE RANDOM(SEED, RANDX)

      INTEGER SEED
      REAL RANDX

      SEED = 2045*SEED + 1
      SEED = SEED - (SEED/1048576)*1048576
      RANDX = REAL(SEED + 1)/1048577.0
      RETURN

      END
}

swift
{
    func getRandom() -> Int {
        return 4;
    }
}

fl {
    numberTwo = 2;

    print "Fl!";

    flGetRandom = getRandom;
    
    // Fortran functions don't have a return type, so we
    // use this @<number> syntax to get the return type
    // based on the given parameter provided. For example
    // if we want to get the new value of the second parameter
    // we use RANDOM@1.
    flGetRandom2 = RANDOM@1 128 0;
    
    aLambda = x -> x;
}

python
{
    print(getRandom())
    print(numberTwo())
    print(aLambda(200))
    print("Fl get random: " + flGetRandom())
    print("Fl get random2: " + flGetRandom2())

    seed = 128
    randx = 0

    for n in range(5):
        RANDOM(seed, randx)
        print(randx)
}
